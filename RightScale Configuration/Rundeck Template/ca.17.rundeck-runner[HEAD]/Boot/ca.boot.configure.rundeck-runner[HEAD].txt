#!/bin/bash

#
# Test for a reboot, if this is a reboot just skip this script.
#


#if test "$RS_REBOOT" = "true" -o -d /usr/local/bin2
#then
#  echo "Rundeck Runner installed, skipped on a reboot."
#  logger -t RightScale "Rundeck Runner installed, skipped on a reboot."
#  exit 0
#fi

myDNSname=$CA_DPL_RUNDECK_DNS
myHOSTname=$CA_DPL_RUNDECK_HOST
ATTACH_DIR=$RS_ATTACH_DIR
myRDSrundeckreader=$CA_DPL_RUNDECKREADER_PWD
myRDSrundeckreader17=$CA_DPL_RUNDECKREADER17_PWD
myGITHUBsshkey=$CA_DPL_GITHUB_SSH_KEY


######### python ###########
#python is installed by default, use "python -V" to check
#install boto library
sudo yum install python-pip -y

#don't do it, screws up pip
#sudo pip install --upgrade pip
#sudo ln /usr/bin/pip-2.7 /usr/bin/pip

sudo /usr/bin/pip install boto 
#Requirement already satisfied (use --upgrade to upgrade): boto in /usr/lib/python2.7/dist-packages

#install boto3
sudo /usr/bin/pip install boto3
#botocore is completed via of boto3 installation, however, for some reason, botocore doesn't get installed with latest version
#need to have botocore 1.4.28 or later, -upgrade made it happen
sudo pip install boto3 --upgrade

#install tabulate
sudo /usr/bin/pip install tabulate

#PyMySQL
sudo /usr/bin/pip install PyMySQL

#PyWinRM
sudo /usr/bin/pip install -Vv pywinrm==0.2.2

#suds
sudo /usr/bin/pip install suds

#prettytable
sudo /usr/bin/pip install prettytable==0.7.2

#Enable epel to install colordiff
sudo yum-config-manager --enable epel
sudo yum -y install colordiff

#gcc wheel and xml
sudo yum install gcc -y
sudo yum install libxslt-devel libxml2-devel -y

sudo /usr/bin/pip install wheel
sudo /usr/bin/pip install lxml

#pyopenssl
sudo yum install libffi-devel
sudo yum install openssl-devel
sudo pip install pyopenssl
sudo yum install gcc-c++
sudo /usr/bin/pip install oauth2client
sudo /usr/bin/pip install gspread
sudo /usr/bin/pip install pandas
sudo /usr/bin/pip install pycountry


sudo mkdir /home/ec2-user/.aws
sudo sh -c "echo -e [default]\noutput = json\nregion = us-west-2\n" > /home/ec2-user/.aws/config
sudo chown ec2-user /home/ec2-user/.aws
sudo chown ec2-user /home/ec2-user/.aws/config
sudo chmod 600 /home/ec2-user/.aws/config

sudo cp $ATTACH_DIR/bashrc /root/.bashrc
sudo cp $ATTACH_DIR/vimrc /root/.vimrc
sudo cp $ATTACH_DIR/bashrc /home/ec2-user/.bashrc
sudo cp $ATTACH_DIR/vimrc /home/ec2-user/.vimrc
sudo chown ec2-user /home/ec2-user/.bashrc
sudo chown ec2-user /home/ec2-user/.vimrc

if [ ! -d /usr/local/bin2 ]
then
  sudo mkdir /usr/local/bin2
  sudo chown ec2-user /usr/local/bin2
fi

sudo chown -R ec2-user /usr/local/bin2/*
sudo chgrp -R ec2-user /usr/local/bin2/*
sudo chmod 770 /usr/local/bin2/*

#install RDS rundeckreader password both 16: RDSrundeckreader 17: RDSrundeckreader17
sudo mkdir /etc/rundeck
sudo sh -c "echo '$myRDSrundeckreader' > /etc/rundeck/RDSrundeckreader16"
sudo sh -c "echo '$myRDSrundeckreader17' > /etc/rundeck/RDSrundeckreader17"
sudo chown -R ec2-user /etc/rundeck/*
sudo chgrp -R ec2-user /etc/rundeck/*
sudo chmod 600 /etc/rundeck/RDSrundeckreader*


myIP=$(ifconfig eth0 |grep  'inet addr:' | cut -d ':' -f2|cut -d' ' -f1)
if test x$myIP != x && grep $myDNSname /etc/hosts > /dev/null 2>&1
then
    :
else
    sudo echo "$myIP  $myDNSname >> /etc/hosts"
    sudo sh -c "echo $myIP  $myDNSname >> /etc/hosts"
fi

#add mysql client
sudo yum install mysql -y

#replace/add HOSTname
sudo sed -i "s/Rundeck/$myHOSTname/" /root/.bashrc
sudo sed -i "s/Rundeck/$myHOSTname/" /home/ec2-user/.bashrc
sudo sed -i "s/HOSTNAME=localhost.localdomain/HOSTNAME=$myHOSTname/" /etc/sysconfig/network

sudo hostname $myHOSTname

#here, import scripts by fetching from git repo.
sudo yum -y install git
echo "creating id_rsa"
sudo sh -c "echo '$myGITHUBsshkey' > /home/ec2-user/.ssh/id_rsa"
echo "creating config"
#sudo sh -c "echo -e 'Host github.com\n\tStrictHostKeyChecking no\n' >> /home/ec2-user/.ssh/config"
sudo sh -c "echo -e 'Host github.com\n\tStrictHostKeyChecking no\n\tHostname ssh.github.com\n\tPort 443\n' >> /home/ec2-user/.ssh/config"
sudo chmod 600 /home/ec2-user/.ssh/id_rsa
sudo chmod 600 /home/ec2-user/.ssh/config
sudo chown ec2-user /home/ec2-user/.ssh/id_rsa
sudo chown ec2-user /home/ec2-user/.ssh/config
sudo chmod 777 /usr/local/bin
cd /usr/local/bin
sudo -u ec2-user sh -c 'echo yes | git clone git@github.com:CommonApp/DevOps.git DevOps'
sudo -u ec2-user sh -c 'echo yes | git clone git@github.com:CommonApp/Configs.git Configs'
